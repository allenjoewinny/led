
colour.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000484  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000618  08000618  00020014  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000618  08000618  00020014  2**0
                  CONTENTS
  4 .ARM          00000000  08000618  08000618  00020014  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000618  08000618  00020014  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000618  08000618  00010618  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800061c  0800061c  0001061c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000014  20000000  08000620  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000014  08000634  00020014  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000030  08000634  00020030  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020014  2**0
                  CONTENTS, READONLY
 12 .debug_info   000001d5  00000000  00000000  00020044  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000000da  00000000  00000000  00020219  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000098  00000000  00000000  000202f8  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000080  00000000  00000000  00020390  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00000f08  00000000  00000000  00020410  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00000504  00000000  00000000  00021318  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00003b0d  00000000  00000000  0002181c  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  00025329  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000001a0  00000000  00000000  000253a4  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000014 	.word	0x20000014
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000600 	.word	0x08000600

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000018 	.word	0x20000018
 80001d0:	08000600 	.word	0x08000600

080001d4 <main>:
void clear();



int main()
{
 80001d4:	b580      	push	{r7, lr}
 80001d6:	af00      	add	r7, sp, #0
	*pclk|= (1<<21);
 80001d8:	4b3a      	ldr	r3, [pc, #232]	; (80002c4 <main+0xf0>)
 80001da:	681b      	ldr	r3, [r3, #0]
 80001dc:	681a      	ldr	r2, [r3, #0]
 80001de:	4b39      	ldr	r3, [pc, #228]	; (80002c4 <main+0xf0>)
 80001e0:	681b      	ldr	r3, [r3, #0]
 80001e2:	f442 1200 	orr.w	r2, r2, #2097152	; 0x200000
 80001e6:	601a      	str	r2, [r3, #0]
    *userclk |=(1<<17);
 80001e8:	4b37      	ldr	r3, [pc, #220]	; (80002c8 <main+0xf4>)
 80001ea:	681b      	ldr	r3, [r3, #0]
 80001ec:	681a      	ldr	r2, [r3, #0]
 80001ee:	4b36      	ldr	r3, [pc, #216]	; (80002c8 <main+0xf4>)
 80001f0:	681b      	ldr	r3, [r3, #0]
 80001f2:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 80001f6:	601a      	str	r2, [r3, #0]

while(1)
{
	 *pclk|= (1<<21);
 80001f8:	4b32      	ldr	r3, [pc, #200]	; (80002c4 <main+0xf0>)
 80001fa:	681b      	ldr	r3, [r3, #0]
 80001fc:	681a      	ldr	r2, [r3, #0]
 80001fe:	4b31      	ldr	r3, [pc, #196]	; (80002c4 <main+0xf0>)
 8000200:	681b      	ldr	r3, [r3, #0]
 8000202:	f442 1200 	orr.w	r2, r2, #2097152	; 0x200000
 8000206:	601a      	str	r2, [r3, #0]
     *userclk |=(1<<17);
 8000208:	4b2f      	ldr	r3, [pc, #188]	; (80002c8 <main+0xf4>)
 800020a:	681b      	ldr	r3, [r3, #0]
 800020c:	681a      	ldr	r2, [r3, #0]
 800020e:	4b2e      	ldr	r3, [pc, #184]	; (80002c8 <main+0xf4>)
 8000210:	681b      	ldr	r3, [r3, #0]
 8000212:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000216:	601a      	str	r2, [r3, #0]
while(!(*user&0X01))//1
 8000218:	e021      	b.n	800025e <main+0x8a>
     {
     r1();
 800021a:	f000 f86f 	bl	80002fc <r1>
     delay();
 800021e:	f000 f857 	bl	80002d0 <delay>
     o1();
 8000222:	f000 f943 	bl	80004ac <o1>
     delay();
 8000226:	f000 f853 	bl	80002d0 <delay>
     g1();
 800022a:	f000 f8f7 	bl	800041c <g1>
     delay();
 800022e:	f000 f84f 	bl	80002d0 <delay>
     b1();
 8000232:	f000 f8ab 	bl	800038c <b1>
     delay();
 8000236:	f000 f84b 	bl	80002d0 <delay>
     r2();
 800023a:	f000 f883 	bl	8000344 <r2>
     delay();
 800023e:	f000 f847 	bl	80002d0 <delay>
     o2();
 8000242:	f000 f957 	bl	80004f4 <o2>
     delay();
 8000246:	f000 f843 	bl	80002d0 <delay>
     g2();
 800024a:	f000 f90b 	bl	8000464 <g2>
     delay();
 800024e:	f000 f83f 	bl	80002d0 <delay>
     b2();
 8000252:	f000 f8bf 	bl	80003d4 <b2>
     delay();
 8000256:	f000 f83b 	bl	80002d0 <delay>
clear();
 800025a:	f000 f96f 	bl	800053c <clear>
while(!(*user&0X01))//1
 800025e:	4b1b      	ldr	r3, [pc, #108]	; (80002cc <main+0xf8>)
 8000260:	681b      	ldr	r3, [r3, #0]
 8000262:	681b      	ldr	r3, [r3, #0]
 8000264:	f003 0301 	and.w	r3, r3, #1
 8000268:	2b00      	cmp	r3, #0
 800026a:	d0d6      	beq.n	800021a <main+0x46>
     }
while(!(*user&0X01))//2
 800026c:	e021      	b.n	80002b2 <main+0xde>
     {
     r2();
 800026e:	f000 f869 	bl	8000344 <r2>
     delay();
 8000272:	f000 f82d 	bl	80002d0 <delay>
     o2();
 8000276:	f000 f93d 	bl	80004f4 <o2>
     delay();
 800027a:	f000 f829 	bl	80002d0 <delay>
     g2();
 800027e:	f000 f8f1 	bl	8000464 <g2>
     delay();
 8000282:	f000 f825 	bl	80002d0 <delay>
     b2();
 8000286:	f000 f8a5 	bl	80003d4 <b2>
     delay();
 800028a:	f000 f821 	bl	80002d0 <delay>
     r1();
 800028e:	f000 f835 	bl	80002fc <r1>
     delay();
 8000292:	f000 f81d 	bl	80002d0 <delay>
     o1();
 8000296:	f000 f909 	bl	80004ac <o1>
     delay();
 800029a:	f000 f819 	bl	80002d0 <delay>
     g1();
 800029e:	f000 f8bd 	bl	800041c <g1>
     delay();
 80002a2:	f000 f815 	bl	80002d0 <delay>
     b1();
 80002a6:	f000 f871 	bl	800038c <b1>
     delay();
 80002aa:	f000 f811 	bl	80002d0 <delay>
     clear();
 80002ae:	f000 f945 	bl	800053c <clear>
while(!(*user&0X01))//2
 80002b2:	4b06      	ldr	r3, [pc, #24]	; (80002cc <main+0xf8>)
 80002b4:	681b      	ldr	r3, [r3, #0]
 80002b6:	681b      	ldr	r3, [r3, #0]
 80002b8:	f003 0301 	and.w	r3, r3, #1
 80002bc:	2b00      	cmp	r3, #0
 80002be:	d0d6      	beq.n	800026e <main+0x9a>
	 *pclk|= (1<<21);
 80002c0:	e79a      	b.n	80001f8 <main+0x24>
 80002c2:	bf00      	nop
 80002c4:	20000000 	.word	0x20000000
 80002c8:	2000000c 	.word	0x2000000c
 80002cc:	20000010 	.word	0x20000010

080002d0 <delay>:
	return 0;

}

void delay()
{
 80002d0:	b480      	push	{r7}
 80002d2:	b083      	sub	sp, #12
 80002d4:	af00      	add	r7, sp, #0
	for(int i=0;i<=500000;i++);
 80002d6:	2300      	movs	r3, #0
 80002d8:	607b      	str	r3, [r7, #4]
 80002da:	e002      	b.n	80002e2 <delay+0x12>
 80002dc:	687b      	ldr	r3, [r7, #4]
 80002de:	3301      	adds	r3, #1
 80002e0:	607b      	str	r3, [r7, #4]
 80002e2:	687b      	ldr	r3, [r7, #4]
 80002e4:	4a04      	ldr	r2, [pc, #16]	; (80002f8 <delay+0x28>)
 80002e6:	4293      	cmp	r3, r2
 80002e8:	ddf8      	ble.n	80002dc <delay+0xc>
}
 80002ea:	bf00      	nop
 80002ec:	370c      	adds	r7, #12
 80002ee:	46bd      	mov	sp, r7
 80002f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002f4:	4770      	bx	lr
 80002f6:	bf00      	nop
 80002f8:	0007a120 	.word	0x0007a120

080002fc <r1>:

void r1()
{
 80002fc:	b480      	push	{r7}
 80002fe:	af00      	add	r7, sp, #0
	*pmode &=~(3<<26);
 8000300:	4b0e      	ldr	r3, [pc, #56]	; (800033c <r1+0x40>)
 8000302:	681b      	ldr	r3, [r3, #0]
 8000304:	681a      	ldr	r2, [r3, #0]
 8000306:	4b0d      	ldr	r3, [pc, #52]	; (800033c <r1+0x40>)
 8000308:	681b      	ldr	r3, [r3, #0]
 800030a:	f022 6240 	bic.w	r2, r2, #201326592	; 0xc000000
 800030e:	601a      	str	r2, [r3, #0]
	*pmode|=(1<<26);
 8000310:	4b0a      	ldr	r3, [pc, #40]	; (800033c <r1+0x40>)
 8000312:	681b      	ldr	r3, [r3, #0]
 8000314:	681a      	ldr	r2, [r3, #0]
 8000316:	4b09      	ldr	r3, [pc, #36]	; (800033c <r1+0x40>)
 8000318:	681b      	ldr	r3, [r3, #0]
 800031a:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 800031e:	601a      	str	r2, [r3, #0]
	*pout |=(1<<13);
 8000320:	4b07      	ldr	r3, [pc, #28]	; (8000340 <r1+0x44>)
 8000322:	681b      	ldr	r3, [r3, #0]
 8000324:	681a      	ldr	r2, [r3, #0]
 8000326:	4b06      	ldr	r3, [pc, #24]	; (8000340 <r1+0x44>)
 8000328:	681b      	ldr	r3, [r3, #0]
 800032a:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800032e:	601a      	str	r2, [r3, #0]

}
 8000330:	bf00      	nop
 8000332:	46bd      	mov	sp, r7
 8000334:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000338:	4770      	bx	lr
 800033a:	bf00      	nop
 800033c:	20000004 	.word	0x20000004
 8000340:	20000008 	.word	0x20000008

08000344 <r2>:
void r2()
{
 8000344:	b480      	push	{r7}
 8000346:	af00      	add	r7, sp, #0
	*pmode &=~(3<<18);
 8000348:	4b0e      	ldr	r3, [pc, #56]	; (8000384 <r2+0x40>)
 800034a:	681b      	ldr	r3, [r3, #0]
 800034c:	681a      	ldr	r2, [r3, #0]
 800034e:	4b0d      	ldr	r3, [pc, #52]	; (8000384 <r2+0x40>)
 8000350:	681b      	ldr	r3, [r3, #0]
 8000352:	f422 2240 	bic.w	r2, r2, #786432	; 0xc0000
 8000356:	601a      	str	r2, [r3, #0]
	*pmode|=(1<<18);
 8000358:	4b0a      	ldr	r3, [pc, #40]	; (8000384 <r2+0x40>)
 800035a:	681b      	ldr	r3, [r3, #0]
 800035c:	681a      	ldr	r2, [r3, #0]
 800035e:	4b09      	ldr	r3, [pc, #36]	; (8000384 <r2+0x40>)
 8000360:	681b      	ldr	r3, [r3, #0]
 8000362:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8000366:	601a      	str	r2, [r3, #0]
	*pout |=(1<<9);
 8000368:	4b07      	ldr	r3, [pc, #28]	; (8000388 <r2+0x44>)
 800036a:	681b      	ldr	r3, [r3, #0]
 800036c:	681a      	ldr	r2, [r3, #0]
 800036e:	4b06      	ldr	r3, [pc, #24]	; (8000388 <r2+0x44>)
 8000370:	681b      	ldr	r3, [r3, #0]
 8000372:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8000376:	601a      	str	r2, [r3, #0]
}
 8000378:	bf00      	nop
 800037a:	46bd      	mov	sp, r7
 800037c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000380:	4770      	bx	lr
 8000382:	bf00      	nop
 8000384:	20000004 	.word	0x20000004
 8000388:	20000008 	.word	0x20000008

0800038c <b1>:

void b1()
{
 800038c:	b480      	push	{r7}
 800038e:	af00      	add	r7, sp, #0
	*pmode &=~(3<<16);
 8000390:	4b0e      	ldr	r3, [pc, #56]	; (80003cc <b1+0x40>)
 8000392:	681b      	ldr	r3, [r3, #0]
 8000394:	681a      	ldr	r2, [r3, #0]
 8000396:	4b0d      	ldr	r3, [pc, #52]	; (80003cc <b1+0x40>)
 8000398:	681b      	ldr	r3, [r3, #0]
 800039a:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 800039e:	601a      	str	r2, [r3, #0]
	*pmode|=(1<<16);
 80003a0:	4b0a      	ldr	r3, [pc, #40]	; (80003cc <b1+0x40>)
 80003a2:	681b      	ldr	r3, [r3, #0]
 80003a4:	681a      	ldr	r2, [r3, #0]
 80003a6:	4b09      	ldr	r3, [pc, #36]	; (80003cc <b1+0x40>)
 80003a8:	681b      	ldr	r3, [r3, #0]
 80003aa:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80003ae:	601a      	str	r2, [r3, #0]
	*pout |=(1<<8);
 80003b0:	4b07      	ldr	r3, [pc, #28]	; (80003d0 <b1+0x44>)
 80003b2:	681b      	ldr	r3, [r3, #0]
 80003b4:	681a      	ldr	r2, [r3, #0]
 80003b6:	4b06      	ldr	r3, [pc, #24]	; (80003d0 <b1+0x44>)
 80003b8:	681b      	ldr	r3, [r3, #0]
 80003ba:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80003be:	601a      	str	r2, [r3, #0]
}
 80003c0:	bf00      	nop
 80003c2:	46bd      	mov	sp, r7
 80003c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003c8:	4770      	bx	lr
 80003ca:	bf00      	nop
 80003cc:	20000004 	.word	0x20000004
 80003d0:	20000008 	.word	0x20000008

080003d4 <b2>:

void b2()
{
 80003d4:	b480      	push	{r7}
 80003d6:	af00      	add	r7, sp, #0

	*pmode &=~(3<<24);
 80003d8:	4b0e      	ldr	r3, [pc, #56]	; (8000414 <b2+0x40>)
 80003da:	681b      	ldr	r3, [r3, #0]
 80003dc:	681a      	ldr	r2, [r3, #0]
 80003de:	4b0d      	ldr	r3, [pc, #52]	; (8000414 <b2+0x40>)
 80003e0:	681b      	ldr	r3, [r3, #0]
 80003e2:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 80003e6:	601a      	str	r2, [r3, #0]
	*pmode|=(1<<24);
 80003e8:	4b0a      	ldr	r3, [pc, #40]	; (8000414 <b2+0x40>)
 80003ea:	681b      	ldr	r3, [r3, #0]
 80003ec:	681a      	ldr	r2, [r3, #0]
 80003ee:	4b09      	ldr	r3, [pc, #36]	; (8000414 <b2+0x40>)
 80003f0:	681b      	ldr	r3, [r3, #0]
 80003f2:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 80003f6:	601a      	str	r2, [r3, #0]
	*pout |=(1<<12);
 80003f8:	4b07      	ldr	r3, [pc, #28]	; (8000418 <b2+0x44>)
 80003fa:	681b      	ldr	r3, [r3, #0]
 80003fc:	681a      	ldr	r2, [r3, #0]
 80003fe:	4b06      	ldr	r3, [pc, #24]	; (8000418 <b2+0x44>)
 8000400:	681b      	ldr	r3, [r3, #0]
 8000402:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8000406:	601a      	str	r2, [r3, #0]
}
 8000408:	bf00      	nop
 800040a:	46bd      	mov	sp, r7
 800040c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000410:	4770      	bx	lr
 8000412:	bf00      	nop
 8000414:	20000004 	.word	0x20000004
 8000418:	20000008 	.word	0x20000008

0800041c <g1>:

void g1()
{
 800041c:	b480      	push	{r7}
 800041e:	af00      	add	r7, sp, #0
	*pmode &=~(3<<30);
 8000420:	4b0e      	ldr	r3, [pc, #56]	; (800045c <g1+0x40>)
 8000422:	681b      	ldr	r3, [r3, #0]
 8000424:	681a      	ldr	r2, [r3, #0]
 8000426:	4b0d      	ldr	r3, [pc, #52]	; (800045c <g1+0x40>)
 8000428:	681b      	ldr	r3, [r3, #0]
 800042a:	f022 4240 	bic.w	r2, r2, #3221225472	; 0xc0000000
 800042e:	601a      	str	r2, [r3, #0]
	*pmode|=(1<<30);
 8000430:	4b0a      	ldr	r3, [pc, #40]	; (800045c <g1+0x40>)
 8000432:	681b      	ldr	r3, [r3, #0]
 8000434:	681a      	ldr	r2, [r3, #0]
 8000436:	4b09      	ldr	r3, [pc, #36]	; (800045c <g1+0x40>)
 8000438:	681b      	ldr	r3, [r3, #0]
 800043a:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 800043e:	601a      	str	r2, [r3, #0]
	*pout |=(1<<15);
 8000440:	4b07      	ldr	r3, [pc, #28]	; (8000460 <g1+0x44>)
 8000442:	681b      	ldr	r3, [r3, #0]
 8000444:	681a      	ldr	r2, [r3, #0]
 8000446:	4b06      	ldr	r3, [pc, #24]	; (8000460 <g1+0x44>)
 8000448:	681b      	ldr	r3, [r3, #0]
 800044a:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800044e:	601a      	str	r2, [r3, #0]
}
 8000450:	bf00      	nop
 8000452:	46bd      	mov	sp, r7
 8000454:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000458:	4770      	bx	lr
 800045a:	bf00      	nop
 800045c:	20000004 	.word	0x20000004
 8000460:	20000008 	.word	0x20000008

08000464 <g2>:

void g2()
{
 8000464:	b480      	push	{r7}
 8000466:	af00      	add	r7, sp, #0
	*pmode &=~(3<<22);
 8000468:	4b0e      	ldr	r3, [pc, #56]	; (80004a4 <g2+0x40>)
 800046a:	681b      	ldr	r3, [r3, #0]
 800046c:	681a      	ldr	r2, [r3, #0]
 800046e:	4b0d      	ldr	r3, [pc, #52]	; (80004a4 <g2+0x40>)
 8000470:	681b      	ldr	r3, [r3, #0]
 8000472:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8000476:	601a      	str	r2, [r3, #0]
	*pmode|=(1<<22);
 8000478:	4b0a      	ldr	r3, [pc, #40]	; (80004a4 <g2+0x40>)
 800047a:	681b      	ldr	r3, [r3, #0]
 800047c:	681a      	ldr	r2, [r3, #0]
 800047e:	4b09      	ldr	r3, [pc, #36]	; (80004a4 <g2+0x40>)
 8000480:	681b      	ldr	r3, [r3, #0]
 8000482:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8000486:	601a      	str	r2, [r3, #0]
	*pout |=(1<<11);
 8000488:	4b07      	ldr	r3, [pc, #28]	; (80004a8 <g2+0x44>)
 800048a:	681b      	ldr	r3, [r3, #0]
 800048c:	681a      	ldr	r2, [r3, #0]
 800048e:	4b06      	ldr	r3, [pc, #24]	; (80004a8 <g2+0x44>)
 8000490:	681b      	ldr	r3, [r3, #0]
 8000492:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8000496:	601a      	str	r2, [r3, #0]

}
 8000498:	bf00      	nop
 800049a:	46bd      	mov	sp, r7
 800049c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004a0:	4770      	bx	lr
 80004a2:	bf00      	nop
 80004a4:	20000004 	.word	0x20000004
 80004a8:	20000008 	.word	0x20000008

080004ac <o1>:

void o1()
{
 80004ac:	b480      	push	{r7}
 80004ae:	af00      	add	r7, sp, #0

	*pmode &=~(3<<20);
 80004b0:	4b0e      	ldr	r3, [pc, #56]	; (80004ec <o1+0x40>)
 80004b2:	681b      	ldr	r3, [r3, #0]
 80004b4:	681a      	ldr	r2, [r3, #0]
 80004b6:	4b0d      	ldr	r3, [pc, #52]	; (80004ec <o1+0x40>)
 80004b8:	681b      	ldr	r3, [r3, #0]
 80004ba:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
 80004be:	601a      	str	r2, [r3, #0]
	*pmode|=(1<<20);
 80004c0:	4b0a      	ldr	r3, [pc, #40]	; (80004ec <o1+0x40>)
 80004c2:	681b      	ldr	r3, [r3, #0]
 80004c4:	681a      	ldr	r2, [r3, #0]
 80004c6:	4b09      	ldr	r3, [pc, #36]	; (80004ec <o1+0x40>)
 80004c8:	681b      	ldr	r3, [r3, #0]
 80004ca:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 80004ce:	601a      	str	r2, [r3, #0]
	*pout |=(1<<10);
 80004d0:	4b07      	ldr	r3, [pc, #28]	; (80004f0 <o1+0x44>)
 80004d2:	681b      	ldr	r3, [r3, #0]
 80004d4:	681a      	ldr	r2, [r3, #0]
 80004d6:	4b06      	ldr	r3, [pc, #24]	; (80004f0 <o1+0x44>)
 80004d8:	681b      	ldr	r3, [r3, #0]
 80004da:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80004de:	601a      	str	r2, [r3, #0]
}
 80004e0:	bf00      	nop
 80004e2:	46bd      	mov	sp, r7
 80004e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004e8:	4770      	bx	lr
 80004ea:	bf00      	nop
 80004ec:	20000004 	.word	0x20000004
 80004f0:	20000008 	.word	0x20000008

080004f4 <o2>:

void o2()
{
 80004f4:	b480      	push	{r7}
 80004f6:	af00      	add	r7, sp, #0
	*pmode &=~(3<<28);
 80004f8:	4b0e      	ldr	r3, [pc, #56]	; (8000534 <o2+0x40>)
 80004fa:	681b      	ldr	r3, [r3, #0]
 80004fc:	681a      	ldr	r2, [r3, #0]
 80004fe:	4b0d      	ldr	r3, [pc, #52]	; (8000534 <o2+0x40>)
 8000500:	681b      	ldr	r3, [r3, #0]
 8000502:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8000506:	601a      	str	r2, [r3, #0]
	*pmode|=(1<<28);
 8000508:	4b0a      	ldr	r3, [pc, #40]	; (8000534 <o2+0x40>)
 800050a:	681b      	ldr	r3, [r3, #0]
 800050c:	681a      	ldr	r2, [r3, #0]
 800050e:	4b09      	ldr	r3, [pc, #36]	; (8000534 <o2+0x40>)
 8000510:	681b      	ldr	r3, [r3, #0]
 8000512:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8000516:	601a      	str	r2, [r3, #0]
	*pout |=(1<<14);
 8000518:	4b07      	ldr	r3, [pc, #28]	; (8000538 <o2+0x44>)
 800051a:	681b      	ldr	r3, [r3, #0]
 800051c:	681a      	ldr	r2, [r3, #0]
 800051e:	4b06      	ldr	r3, [pc, #24]	; (8000538 <o2+0x44>)
 8000520:	681b      	ldr	r3, [r3, #0]
 8000522:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8000526:	601a      	str	r2, [r3, #0]

}
 8000528:	bf00      	nop
 800052a:	46bd      	mov	sp, r7
 800052c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000530:	4770      	bx	lr
 8000532:	bf00      	nop
 8000534:	20000004 	.word	0x20000004
 8000538:	20000008 	.word	0x20000008

0800053c <clear>:

void clear()
{
 800053c:	b480      	push	{r7}
 800053e:	af00      	add	r7, sp, #0
	*pmode&= 0X00000000;
 8000540:	4b06      	ldr	r3, [pc, #24]	; (800055c <clear+0x20>)
 8000542:	681b      	ldr	r3, [r3, #0]
 8000544:	2200      	movs	r2, #0
 8000546:	601a      	str	r2, [r3, #0]
	*pout&= 0X00000000;
 8000548:	4b05      	ldr	r3, [pc, #20]	; (8000560 <clear+0x24>)
 800054a:	681b      	ldr	r3, [r3, #0]
 800054c:	2200      	movs	r2, #0
 800054e:	601a      	str	r2, [r3, #0]
}
 8000550:	bf00      	nop
 8000552:	46bd      	mov	sp, r7
 8000554:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000558:	4770      	bx	lr
 800055a:	bf00      	nop
 800055c:	20000004 	.word	0x20000004
 8000560:	20000008 	.word	0x20000008

08000564 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000564:	480d      	ldr	r0, [pc, #52]	; (800059c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000566:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000568:	480d      	ldr	r0, [pc, #52]	; (80005a0 <LoopForever+0x6>)
  ldr r1, =_edata
 800056a:	490e      	ldr	r1, [pc, #56]	; (80005a4 <LoopForever+0xa>)
  ldr r2, =_sidata
 800056c:	4a0e      	ldr	r2, [pc, #56]	; (80005a8 <LoopForever+0xe>)
  movs r3, #0
 800056e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000570:	e002      	b.n	8000578 <LoopCopyDataInit>

08000572 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000572:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000574:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000576:	3304      	adds	r3, #4

08000578 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000578:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800057a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800057c:	d3f9      	bcc.n	8000572 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800057e:	4a0b      	ldr	r2, [pc, #44]	; (80005ac <LoopForever+0x12>)
  ldr r4, =_ebss
 8000580:	4c0b      	ldr	r4, [pc, #44]	; (80005b0 <LoopForever+0x16>)
  movs r3, #0
 8000582:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000584:	e001      	b.n	800058a <LoopFillZerobss>

08000586 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000586:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000588:	3204      	adds	r2, #4

0800058a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800058a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800058c:	d3fb      	bcc.n	8000586 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 800058e:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 8000592:	f000 f811 	bl	80005b8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000596:	f7ff fe1d 	bl	80001d4 <main>

0800059a <LoopForever>:

LoopForever:
    b LoopForever
 800059a:	e7fe      	b.n	800059a <LoopForever>
  ldr   r0, =_estack
 800059c:	2000a000 	.word	0x2000a000
  ldr r0, =_sdata
 80005a0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80005a4:	20000014 	.word	0x20000014
  ldr r2, =_sidata
 80005a8:	08000620 	.word	0x08000620
  ldr r2, =_sbss
 80005ac:	20000014 	.word	0x20000014
  ldr r4, =_ebss
 80005b0:	20000030 	.word	0x20000030

080005b4 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80005b4:	e7fe      	b.n	80005b4 <ADC1_2_IRQHandler>
	...

080005b8 <__libc_init_array>:
 80005b8:	b570      	push	{r4, r5, r6, lr}
 80005ba:	4e0d      	ldr	r6, [pc, #52]	; (80005f0 <__libc_init_array+0x38>)
 80005bc:	4c0d      	ldr	r4, [pc, #52]	; (80005f4 <__libc_init_array+0x3c>)
 80005be:	1ba4      	subs	r4, r4, r6
 80005c0:	10a4      	asrs	r4, r4, #2
 80005c2:	2500      	movs	r5, #0
 80005c4:	42a5      	cmp	r5, r4
 80005c6:	d109      	bne.n	80005dc <__libc_init_array+0x24>
 80005c8:	4e0b      	ldr	r6, [pc, #44]	; (80005f8 <__libc_init_array+0x40>)
 80005ca:	4c0c      	ldr	r4, [pc, #48]	; (80005fc <__libc_init_array+0x44>)
 80005cc:	f000 f818 	bl	8000600 <_init>
 80005d0:	1ba4      	subs	r4, r4, r6
 80005d2:	10a4      	asrs	r4, r4, #2
 80005d4:	2500      	movs	r5, #0
 80005d6:	42a5      	cmp	r5, r4
 80005d8:	d105      	bne.n	80005e6 <__libc_init_array+0x2e>
 80005da:	bd70      	pop	{r4, r5, r6, pc}
 80005dc:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80005e0:	4798      	blx	r3
 80005e2:	3501      	adds	r5, #1
 80005e4:	e7ee      	b.n	80005c4 <__libc_init_array+0xc>
 80005e6:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80005ea:	4798      	blx	r3
 80005ec:	3501      	adds	r5, #1
 80005ee:	e7f2      	b.n	80005d6 <__libc_init_array+0x1e>
 80005f0:	08000618 	.word	0x08000618
 80005f4:	08000618 	.word	0x08000618
 80005f8:	08000618 	.word	0x08000618
 80005fc:	0800061c 	.word	0x0800061c

08000600 <_init>:
 8000600:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000602:	bf00      	nop
 8000604:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000606:	bc08      	pop	{r3}
 8000608:	469e      	mov	lr, r3
 800060a:	4770      	bx	lr

0800060c <_fini>:
 800060c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800060e:	bf00      	nop
 8000610:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000612:	bc08      	pop	{r3}
 8000614:	469e      	mov	lr, r3
 8000616:	4770      	bx	lr
